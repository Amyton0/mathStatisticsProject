// <auto-generated />
using System;
using MathStatisticsProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MathStatisticsProject.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240516054334_FirstSeed")]
    partial class FirstSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MathStatisticsProject.Models.Attendance", b =>
                {
                    b.Property<Guid>("LessonId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid");

                    b.Property<int>("AttendanceStatus")
                        .HasColumnType("integer");

                    b.HasKey("LessonId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("Attendances");

                    b.HasData(
                        new
                        {
                            LessonId = new Guid("b0d95707-f6a5-4970-bfa2-b2966196b935"),
                            StudentId = new Guid("6de4dd70-aeaa-4dee-807e-f7f8532756b8"),
                            AttendanceStatus = 1
                        },
                        new
                        {
                            LessonId = new Guid("b0d95707-f6a5-4970-bfa2-b2966196b935"),
                            StudentId = new Guid("3c0bc991-50c4-44d2-a82a-df5124ebf115"),
                            AttendanceStatus = 1
                        },
                        new
                        {
                            LessonId = new Guid("586088ab-8894-46a2-bb75-773d848f1cf7"),
                            StudentId = new Guid("18b38dd3-5095-4aba-95b8-67d65930a204"),
                            AttendanceStatus = 1
                        },
                        new
                        {
                            LessonId = new Guid("e8da9ec5-49c3-4341-aa7c-0ae05cafd2f6"),
                            StudentId = new Guid("6de4dd70-aeaa-4dee-807e-f7f8532756b8"),
                            AttendanceStatus = 1
                        });
                });

            modelBuilder.Entity("MathStatisticsProject.Models.Homework", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Complexity")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uuid");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<double>("Points")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("Send")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.HasIndex("StudentId");

                    b.ToTable("Homeworks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("64ee18e6-261c-493a-8470-4a948adb0cc5"),
                            Complexity = 1,
                            Content = "aaaa",
                            LessonId = new Guid("b0d95707-f6a5-4970-bfa2-b2966196b935"),
                            Message = "ya legnda",
                            Number = 1,
                            Points = 0.59999999999999998,
                            Send = new DateTime(2024, 5, 16, 5, 43, 33, 822, DateTimeKind.Utc).AddTicks(1126),
                            Status = 0,
                            StudentId = new Guid("6de4dd70-aeaa-4dee-807e-f7f8532756b8")
                        },
                        new
                        {
                            Id = new Guid("5f6f3ee1-c2e7-4fd6-b92b-f7e8435dd0be"),
                            Complexity = 0,
                            Content = "aaaa",
                            LessonId = new Guid("b0d95707-f6a5-4970-bfa2-b2966196b935"),
                            Message = "ya legnda",
                            Number = 1,
                            Points = 0.59999999999999998,
                            Send = new DateTime(2024, 5, 16, 5, 43, 33, 822, DateTimeKind.Utc).AddTicks(1136),
                            Status = 2,
                            StudentId = new Guid("18b38dd3-5095-4aba-95b8-67d65930a204")
                        },
                        new
                        {
                            Id = new Guid("c8533872-280e-461e-9d4a-291e34269c8e"),
                            Complexity = 0,
                            Content = "aaaa",
                            LessonId = new Guid("a9212a89-2693-4339-8a9d-0a34fd3d8779"),
                            Message = "ya legnda",
                            Number = 2,
                            Points = 0.59999999999999998,
                            Send = new DateTime(2024, 5, 16, 5, 43, 33, 822, DateTimeKind.Utc).AddTicks(1139),
                            Status = 2,
                            StudentId = new Guid("6de4dd70-aeaa-4dee-807e-f7f8532756b8")
                        },
                        new
                        {
                            Id = new Guid("141b14a3-a7c4-4aa4-8371-263a6dc03271"),
                            Complexity = 0,
                            Content = "aaaa",
                            LessonId = new Guid("586088ab-8894-46a2-bb75-773d848f1cf7"),
                            Message = "ya legnda",
                            Number = 3,
                            Points = 5.0,
                            Send = new DateTime(2024, 5, 16, 5, 43, 33, 822, DateTimeKind.Utc).AddTicks(1142),
                            Status = 0,
                            StudentId = new Guid("8d841c70-3990-40a3-b895-c13de27298f5")
                        });
                });

            modelBuilder.Entity("MathStatisticsProject.Models.Lesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Lessons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b0d95707-f6a5-4970-bfa2-b2966196b935"),
                            Date = new DateTime(2024, 2, 4, 19, 0, 0, 0, DateTimeKind.Utc),
                            Number = 1
                        },
                        new
                        {
                            Id = new Guid("a9212a89-2693-4339-8a9d-0a34fd3d8779"),
                            Date = new DateTime(2024, 2, 11, 19, 0, 0, 0, DateTimeKind.Utc),
                            Number = 2
                        },
                        new
                        {
                            Id = new Guid("586088ab-8894-46a2-bb75-773d848f1cf7"),
                            Date = new DateTime(2024, 2, 18, 19, 0, 0, 0, DateTimeKind.Utc),
                            Number = 3
                        },
                        new
                        {
                            Id = new Guid("e8da9ec5-49c3-4341-aa7c-0ae05cafd2f6"),
                            Date = new DateTime(2024, 2, 25, 19, 0, 0, 0, DateTimeKind.Utc),
                            Number = 4
                        });
                });

            modelBuilder.Entity("MathStatisticsProject.Models.Score", b =>
                {
                    b.Property<Guid>("LessonId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("LessonId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("Scores");

                    b.HasData(
                        new
                        {
                            LessonId = new Guid("b0d95707-f6a5-4970-bfa2-b2966196b935"),
                            StudentId = new Guid("6de4dd70-aeaa-4dee-807e-f7f8532756b8"),
                            Value = 2.0
                        },
                        new
                        {
                            LessonId = new Guid("a9212a89-2693-4339-8a9d-0a34fd3d8779"),
                            StudentId = new Guid("6de4dd70-aeaa-4dee-807e-f7f8532756b8"),
                            Value = 2.0
                        },
                        new
                        {
                            LessonId = new Guid("e8da9ec5-49c3-4341-aa7c-0ae05cafd2f6"),
                            StudentId = new Guid("8d841c70-3990-40a3-b895-c13de27298f5"),
                            Value = 0.5
                        });
                });

            modelBuilder.Entity("MathStatisticsProject.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ThirdName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6de4dd70-aeaa-4dee-807e-f7f8532756b8"),
                            FirstName = "Вася",
                            Group = "204",
                            SecondName = "Пупкин",
                            ThirdName = "1"
                        },
                        new
                        {
                            Id = new Guid("18b38dd3-5095-4aba-95b8-67d65930a204"),
                            FirstName = "Вася",
                            Group = "204",
                            SecondName = "Пупкин",
                            ThirdName = "2"
                        },
                        new
                        {
                            Id = new Guid("8d841c70-3990-40a3-b895-c13de27298f5"),
                            FirstName = "Сильвестер",
                            Group = "201",
                            SecondName = "Сталоне",
                            ThirdName = "Машина"
                        },
                        new
                        {
                            Id = new Guid("3c0bc991-50c4-44d2-a82a-df5124ebf115"),
                            FirstName = "Джейсон",
                            Group = "202",
                            SecondName = "Цитатный",
                            ThirdName = "Мастер"
                        });
                });

            modelBuilder.Entity("MathStatisticsProject.Models.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ThirdName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2de4dd70-aeaa-4dee-807e-f7f8532756b8"),
                            FirstName = "Прокофьев",
                            SecondName = "Сергей",
                            ThirdName = "Павлович"
                        });
                });

            modelBuilder.Entity("MathStatisticsProject.Models.Attendance", b =>
                {
                    b.HasOne("MathStatisticsProject.Models.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MathStatisticsProject.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("MathStatisticsProject.Models.Homework", b =>
                {
                    b.HasOne("MathStatisticsProject.Models.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MathStatisticsProject.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("MathStatisticsProject.Models.Score", b =>
                {
                    b.HasOne("MathStatisticsProject.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
